{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Vue from 'vue';\nimport App from './App.vue';\nimport router from './router';\nimport { BootstrapVue, IconsPlugin } from 'bootstrap-vue';\n\n// Import Bootstrap and BootstrapVue CSS files (order is important)\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap-vue/dist/bootstrap-vue.css';\n\n// Make BootstrapVue available throughout your project\nVue.use(BootstrapVue);\n// Optionally install the BootstrapVue icon components plugin\nVue.use(IconsPlugin);\nVue.config.productionTip = false;\nnew Vue({\n  router,\n  render: h => h(App)\n}).$mount('#app');\nexport async function apiFetch(url, options = {}) {\n  options.headers = {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\n  };\n  const response = await fetch(url, options);\n  if (response.status === 401) {\n    localStorage.removeItem('token');\n    router.push({\n      name: \"login\"\n    });\n  }\n  if (response.status === 404) {\n    router.push({\n      name: 'NotFound'\n    });\n  }\n  return response;\n}","map":{"version":3,"names":["Vue","App","router","BootstrapVue","IconsPlugin","use","config","productionTip","render","h","$mount","apiFetch","url","options","headers","localStorage","getItem","response","fetch","status","removeItem","push","name"],"sources":["/home/dimitar/projects/blog-app-vue/src/main.js"],"sourcesContent":["import Vue from 'vue'\nimport App from './App.vue'\nimport router from './router'\nimport {BootstrapVue , IconsPlugin} from 'bootstrap-vue'\n\n// Import Bootstrap and BootstrapVue CSS files (order is important)\nimport 'bootstrap/dist/css/bootstrap.css'\nimport 'bootstrap-vue/dist/bootstrap-vue.css'\n\n// Make BootstrapVue available throughout your project\nVue.use(BootstrapVue)\n// Optionally install the BootstrapVue icon components plugin\nVue.use(IconsPlugin)\n\n\n\nVue.config.productionTip = false\n\n\nnew Vue({\n  router,\n  render: h => h(App)\n}).$mount('#app')\n\n\nexport async function apiFetch(url, options = {}) {\n\toptions.headers = {\n\t\t\"Content-Type\": \"application/json\",\n\t\t\"Authorization\": `Token ${localStorage.getItem(\"token\")}`,\n\t};\n\tconst response = await fetch(url, options);\n\tif (response.status === 401) {\n\t\tlocalStorage.removeItem('token')\n\t\trouter.push({ name: \"login\" });\n\t}\n\tif (response.status === 404) {\n\t\trouter.push({name: 'NotFound'})\n\t}\n\treturn response;\n}\n"],"mappings":";AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,GAAG,MAAM,WAAW;AAC3B,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAAQC,YAAY,EAAGC,WAAW,QAAO,eAAe;;AAExD;AACA,OAAO,kCAAkC;AACzC,OAAO,sCAAsC;;AAE7C;AACAJ,GAAG,CAACK,GAAG,CAACF,YAAY,CAAC;AACrB;AACAH,GAAG,CAACK,GAAG,CAACD,WAAW,CAAC;AAIpBJ,GAAG,CAACM,MAAM,CAACC,aAAa,GAAG,KAAK;AAGhC,IAAIP,GAAG,CAAC;EACNE,MAAM;EACNM,MAAM,EAAEC,CAAC,IAAIA,CAAC,CAACR,GAAG;AACpB,CAAC,CAAC,CAACS,MAAM,CAAC,MAAM,CAAC;AAGjB,OAAO,eAAeC,QAAQ,CAACC,GAAG,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;EACjDA,OAAO,CAACC,OAAO,GAAG;IACjB,cAAc,EAAE,kBAAkB;IAClC,eAAe,EAAG,SAAQC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAE;EACzD,CAAC;EACD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACN,GAAG,EAAEC,OAAO,CAAC;EAC1C,IAAII,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;IAC5BJ,YAAY,CAACK,UAAU,CAAC,OAAO,CAAC;IAChClB,MAAM,CAACmB,IAAI,CAAC;MAAEC,IAAI,EAAE;IAAQ,CAAC,CAAC;EAC/B;EACA,IAAIL,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;IAC5BjB,MAAM,CAACmB,IAAI,CAAC;MAACC,IAAI,EAAE;IAAU,CAAC,CAAC;EAChC;EACA,OAAOL,QAAQ;AAChB"},"metadata":{},"sourceType":"module","externalDependencies":[]}