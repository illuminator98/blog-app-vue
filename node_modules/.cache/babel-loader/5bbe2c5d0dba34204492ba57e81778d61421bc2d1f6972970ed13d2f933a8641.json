{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport post from \"../components/Post.vue\";\nimport { apiFetch } from \"../main.js\";\nexport default {\n  name: \"HomeView\",\n  components: {\n    post\n  },\n  data() {\n    return {\n      posts: [],\n      users: [],\n      user: \"\",\n      avatar: \"\",\n      title: \"\",\n      comment: \"\",\n      text: \"\",\n      selectedPost: {},\n      commentsShown: false,\n      selectedComment: {},\n      showInput: false,\n      isBeeingEddited: false,\n      search: \"\"\n    };\n  },\n  methods: {\n    selectPost(post) {\n      this.selectedPost = post;\n    },\n    selectComment(comm) {\n      this.comment = \"\";\n      if (this.showInput) {\n        this.selectedComment = comm;\n      }\n    },\n    showInputFunction() {\n      this.showInput = !this.showInput;\n      this.selectedComment = \"\";\n    },\n    async createPost() {\n      if (!this.title || !this.text) {\n        alert(\"Post title and post text are required\");\n        return;\n      }\n      let requestData = {\n        title: this.title,\n        text: this.text\n      };\n      let response = await apiFetch(\"https://dimitarvuik.pythonanywhere.com/blogs/create/post\", {\n        method: \"POST\",\n        body: JSON.stringify(requestData)\n      });\n      let responseData = await response.json();\n      this.posts.push(responseData);\n      this.title = \"\", this.text = \"\", alert(\"Post Created Successfully\");\n    },\n    async EditPost() {\n      let requestData = {\n        title: this.selectedPost.title,\n        text: this.selectedPost.text\n      };\n      let response = await apiFetch(\"https://dimitarvuik.pythonanywhere.com/blogs/posts/\" + this.selectedPost.id, {\n        method: \"PATCH\",\n        body: JSON.stringify(requestData)\n      });\n      let responseData = await response.json();\n      console.log(responseData);\n      console.log(this.SelectedPost);\n      this.selectedPost.title = responseData.title;\n      this.selectedPost.text = responseData.text;\n    },\n    async DeletePost() {\n      try {\n        await apiFetch(\"https://dimitarvuik.pythonanywhere.com/blogs/posts/\" + this.selectedPost.id, {\n          method: \"DELETE\"\n        });\n        this.getPosts();\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    async createComment() {\n      let requestData = {\n        text: this.comment\n      };\n      await apiFetch(\"https://dimitarvuik.pythonanywhere.com/blogs/posts/\" + this.selectedPost.id + \"/comment\", {\n        method: \"POST\",\n        body: JSON.stringify(requestData)\n      });\n      this.comment = \"\";\n      await this.getPosts();\n    },\n    async editComment() {\n      let requestData = {\n        text: this.selectedComment.text\n      };\n      let response = await apiFetch(\"https://dimitarvuik.pythonanywhere.com/blogs/posts/\" + this.selectedPost.id + \"/comment/\" + this.selectedComment.id, {\n        method: \"PATCH\",\n        body: JSON.stringify(requestData)\n      });\n      let responseData = await response.json();\n      this.selectedComment.text = responseData.text;\n      this.showInput = false;\n      this.isBeeingEddited = false;\n      this.selectedComment = \"\";\n    },\n    deleteComment() {\n      apiFetch(\"https://dimitarvuik.pythonanywhere.com/blogs/posts/\" + this.selectedPost.id + \"/comment/\" + this.selectedComment.id, {\n        method: \"DELETE\"\n      }).then(data => {\n        console.log(data);\n        // remove the item from the local data\n        this.showInput = false;\n        this.getPosts();\n      }).catch(error => {\n        // handle error\n        console.log(error);\n      });\n    },\n    async getPosts() {\n      let response = await apiFetch(\"https://dimitarvuik.pythonanywhere.com/blogs/posts/all\");\n      let responseData = await response.json();\n      this.posts = responseData;\n    }\n  },\n  async created() {\n    await this.getPosts();\n    let user = await apiFetch(\"https://dimitarvuik.pythonanywhere.com/blogs/username\");\n    let responseUser = await user.json();\n    console.log(user);\n    console.log(responseUser);\n    this.user = responseUser;\n  }\n};","map":{"version":3,"mappings":";AA8QA;AACA;AACA;EACAA;EACAC;IACAC;EACA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACAC;MACA;IACA;IACAC;MACA;MACA;QACA;MACA;IACA;IACAC;MACA;MACA;IACA;IACA;MACA;QACAC;QACA;MACA;MACA;QACAb;QACAE;MACA;MACA;QACAY;QACAC;MACA;MACA;MACA;MACA;IACA;IACA;MACA;QACAf;QACAE;MACA;MACA,8BACA,8EACA;QACAY;QACAC;MACA,EACA;MACA;MACAC;MACAA;MACA;MACA;IACA;IACA;MACA;QACA,eACA,8EACA;UACAF;QACA,EACA;QAEA;MACA;QACAE;MACA;IACA;IACA;MACA;QACAd;MACA;MACA,eACA,wDACA,uBACA,YACA;QACAY;QACAC;MACA,EACA;MACA;MACA;IACA;IACA;MACA;QAAAb;MAAA;MACA,8BACA,wDACA,uBACA,cACA,yBACA;QACAY;QACAC;MACA,EACA;MACA;MACA;MACA;MACA;MACA;IACA;IACAE;MACAC,SACA,wDACA,uBACA,cACA,yBACA;QACAJ;MACA,EACA,CACAK;QACAH;QACA;QACA;QACA;MACA,GAEAI;QACA;QACAJ;MACA;IACA;IACA;MACA;MACA;MACA;IACA;EACA;EACA;IACA;IACA;IACA;IAEAA;IACAA;IACA;EACA;AACA","names":["name","components","post","data","posts","users","user","avatar","title","comment","text","selectedPost","commentsShown","selectedComment","showInput","isBeeingEddited","search","methods","selectPost","selectComment","showInputFunction","alert","method","body","console","deleteComment","apiFetch","then","catch"],"sourceRoot":"src/views","sources":["HomeView.vue"],"sourcesContent":["<template>\n  <div id=\"home\">\n    <b-container class=\"d-flex justify-content-center\">\n      <div class=\"text-center w-100\">\n        <div class=\"mt-2 w-100\">\n          <div class=\"row d-flex justify-content-center\">\n            <div class=\"col-md-6\">\n              <h1 class=\"text-white\">Welcome <br /></h1>\n              <b-button class=\"bg-dark mb-3\" v-b-modal.modal-center\n                >Create New Post</b-button\n              >\n              <div class=\"d-flex\">\n                <b-form-input\n                  @keyup.enter=\"\n                    $router.push({ name: 'user', params: { username: search } })\n                  \"\n                  v-model=\"search\"\n                  id=\"input-default\"\n                  placeholder=\"Search for user\"\n                >\n                </b-form-input>\n\n                <button\n                  class=\"bg-dark btn btn-primary search-btn\"\n                  @click=\"\n                    $router.push({ name: 'user', params: { username: search } })\n                  \"\n                >\n                  search\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div>\n          <div>\n            <b-modal\n              id=\"modal-center\"\n              ok-title=\"Create Post\"\n              @ok=\"createPost\"\n              header-class=\"d-none\"\n              footer-class=\"custom-footer\"\n            >\n              <div class=\"container d-flex justify-content-center\">\n                <div class=\"text-center w-100\">\n                  <form class=\"\">\n                    <input\n                      id=\"modal-form\"\n                      class=\"form-control px-3 py-2\"\n                      type=\"text\"\n                      placeholder=\"Post Title\"\n                      v-model=\"title\"\n                    />\n\n                    <b-form-textarea\n                      id=\"textarea\"\n                      v-model=\"text\"\n                      placeholder=\"Write something...\"\n                      rows=\"4\"\n                      class=\"mt-3\"\n                    ></b-form-textarea>\n                    <br />\n                  </form>\n                </div>\n              </div>\n            </b-modal>\n          </div>\n        </div>\n\n        <!-- <div class=\"mt-2 w-100\">\n          <div class=\"row d-flex justify-content-center\">\n            <div class=\"col-md-6\">\n              <b-card\n                @click=\"selectPost(post)\"\n                class=\"card-style mt-4 w-100\"\n                v-for=\"post in posts.slice().reverse()\"\n                :key=\"post.id\"\n              >\n                <div class=\"d-flex card-style justify-content-between\">\n                  <div>\n                    <b-avatar\n                      button\n                      src=\"https://placekitten.com/300/300\"\n                    ></b-avatar>\n                    {{ user.username }}\n                  </div>\n                  <div>\n                    <b-button\n                      class=\"bg-dark mb-2 buttonstyle mx-1\"\n                      v-b-modal.modal-center-edit\n                      >âœŽ</b-button\n                    >\n                    <b-button\n                      class=\"bg-dark buttonstyle mb-2 px-3\"\n                      v-b-modal.my-modal-1\n                      >x</b-button\n                    >\n                  </div>\n                </div>\n\n                <b-card-body class=\"card-style\">\n                  <b-card-title class=\"card-style\">\n                    {{ post.title }}</b-card-title\n                  >\n                </b-card-body>\n\n                <b-list-group class=\"card-style\" flush>\n                  <b-list-group-item class=\"card-style\">\n                    {{ post.text }}</b-list-group-item\n                  >\n                  <b-list-group-item class=\"card-style\">\n                    <button\n                      @click=\"commentsShown = !commentsShown\"\n                      class=\"bg-dark buttonstyle p-2 btn\"\n                    >\n                      {{\n                        commentsShown && selectedPost.id === post.id\n                          ? \"Hide\"\n                          : \"Show\"\n                      }}\n                      Comments\n                    </button></b-list-group-item\n                  >\n                  <div v-if=\"selectedPost.id === post.id && commentsShown\">\n                    <b-list-group-item\n                      v-for=\"comm in post.comment_set\"\n                      :key=\"comm.id\"\n                      @click=\"selectComment(comm)\"\n                      class=\"card-style-comment d-flex justify-content-between\"\n                    >\n                      <div class=\"d-flex d-lg-block flex-column\">\n                        <b-avatar\n                          button\n                          src=\"https://placekitten.com/300/300\"\n                        ></b-avatar>\n                        {{ comm.user.user.username }}\n                      </div>\n                      <div class=\"d-flex align-items-center\">\n                        <p\n                          class=\"m-0\"\n                          v-if=\"\n                            !isBeeingEddited && selectedComment.id !== comm.id\n                          \"\n                        >\n                          {{ comm.text }}\n                        </p>\n                        <b-form-input\n                          v-if=\"selectedComment.id === comm.id && showInput\"\n                          id=\"comment-input-edit\"\n                          v-model=\"selectedComment.text\"\n                          placeholder=\"write a comment...\"\n                          class=\"bg-dark text-white\"\n                        >\n                        </b-form-input>\n                        <button\n                          class=\"btn -btn-primary bg-dark text-white\"\n                          v-if=\"selectedComment.id === comm.id && showInput\"\n                          @click=\"editComment\"\n                        >\n                          enter\n                        </button>\n                      </div>\n\n                      <div class=\"d-flex align-items-center\">\n                        <button\n                          @click=\"showInputFunction\"\n                          class=\"btn comment-button\"\n                          v-if=\"comm.user.user.id === user.id\"\n                        >\n                          âœŽ\n                        </button>\n                        <button\n                          @click=\"showInput = true\"\n                          class=\"btn comment-button\"\n                          v-b-modal.my-modal-deleteComment\n                        >\n                          x\n                        </button>\n                      </div>\n                    </b-list-group-item>\n\n                    <b-list-group-item class=\"card-style\">\n                      <div class=\"d-flex\">\n                        <b-form-input\n                          id=\"comment-input\"\n                          v-model=\"comment\"\n                          placeholder=\"write a comment...\"\n                        >\n                        </b-form-input>\n                        <button\n                          @click=\"createComment\"\n                          class=\"btn btn-dark buttonstyle p-2\"\n                        >\n                          enter\n                        </button>\n                      </div>\n                    </b-list-group-item>\n                  </div>\n                </b-list-group>\n\n                <b-card-body />\n              </b-card>\n              <b-modal\n                id=\"my-modal-deleteComment\"\n                class=\"text-white\"\n                ok-title=\"Delete\"\n                header-class=\"d-none\"\n                footer-class=\"custom-footer\"\n                @ok=\"deleteComment()\"\n                @cancel=\"showInputFunction()\"\n              >\n                Are you sure you want to delete this comment?\n              </b-modal>\n            </div>\n          </div>\n        </div>\n\n        <b-modal\n          id=\"my-modal-1\"\n          class=\"text-white\"\n          ok-title=\"Delete\"\n          header-class=\"d-none\"\n          footer-class=\"custom-footer\"\n          @ok=\"DeletePost()\"\n        >\n          Are you sure you want to delete this post?\n        </b-modal>\n      </div>\n    </b-container>\n    <b-modal\n      id=\"modal-center-edit\"\n      ok-title=\"Edit Post\"\n      @ok=\"EditPost\"\n      header-class=\"d-none\"\n      footer-class=\"custom-footer\"\n    >\n      <div class=\"container d-flex justify-content-center\">\n        <div class=\"text-center w-100\">\n          <form class=\"\">\n            <label>\n              <input\n                id=\"modal-edit\"\n                class=\"form-control px-3 py-2\"\n                type=\"text\"\n                placeholder=\"Post Title\"\n                v-model=\"selectedPost.title\"\n              />\n            </label>\n\n            <b-form-textarea\n              id=\"textarea\"\n              placeholder=\"Write something...\"\n              rows=\"4\"\n              class=\"mt-3\"\n              v-model=\"selectedPost.text\"\n            ></b-form-textarea>\n            <br />\n          </form>\n        </div>\n      </div>\n    </b-modal> -->\n    <post :comments=\"comment\"></post>\n  </div>\n</b-container>\n  </div>\n</template>\n\n\n<script>\nimport post from \"../components/Post.vue\"\nimport { apiFetch } from \"../main.js\";\nexport default {\n  name: \"HomeView\",\n  components: {\n    post\n  },\n  data() {\n    return {\n      posts: [],\n      users: [],\n      user: \"\",\n      avatar: \"\",\n      title: \"\",\n      comment: \"\",\n      text: \"\",\n      selectedPost: {},\n      commentsShown: false,\n      selectedComment: {},\n      showInput: false,\n      isBeeingEddited: false,\n      search: \"\",\n    };\n  },\n  methods: {\n    selectPost(post) {\n      this.selectedPost = post;\n    },\n    selectComment(comm) {\n      this.comment = \"\";\n      if (this.showInput) {\n        this.selectedComment = comm;\n      }\n    },\n    showInputFunction() {\n      this.showInput = !this.showInput;\n      this.selectedComment = \"\";\n    },\n    async createPost() {\n      if (!this.title || !this.text) {\n        alert(\"Post title and post text are required\");\n        return;\n      }\n      let requestData = {\n        title: this.title,\n        text: this.text,\n      };\n      let response = await apiFetch(\"https://dimitarvuik.pythonanywhere.com/blogs/create/post\", {\n        method: \"POST\",\n        body: JSON.stringify(requestData),\n      });\n      let responseData = await response.json();\n      this.posts.push(responseData);\n      (this.title = \"\"), (this.text = \"\"), alert(\"Post Created Successfully\");\n    },\n    async EditPost() {\n      let requestData = {\n        title: this.selectedPost.title,\n        text: this.selectedPost.text,\n      };\n      let response = await apiFetch(\n        \"https://dimitarvuik.pythonanywhere.com/blogs/posts/\" + this.selectedPost.id,\n        {\n          method: \"PATCH\",\n          body: JSON.stringify(requestData),\n        }\n      );\n      let responseData = await response.json();\n      console.log(responseData);\n      console.log(this.SelectedPost);\n      this.selectedPost.title = responseData.title;\n      this.selectedPost.text = responseData.text;\n    },\n    async DeletePost() {\n      try {\n        await apiFetch(\n          \"https://dimitarvuik.pythonanywhere.com/blogs/posts/\" + this.selectedPost.id,\n          {\n            method: \"DELETE\",\n          }\n        );\n\n        this.getPosts();\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    async createComment() {\n      let requestData = {\n        text: this.comment,\n      };\n      await apiFetch(\n        \"https://dimitarvuik.pythonanywhere.com/blogs/posts/\" +\n          this.selectedPost.id +\n          \"/comment\",\n        {\n          method: \"POST\",\n          body: JSON.stringify(requestData),\n        }\n      );\n      this.comment = \"\";\n      await this.getPosts();\n    },\n    async editComment() {\n      let requestData = { text: this.selectedComment.text };\n      let response = await apiFetch(\n        \"https://dimitarvuik.pythonanywhere.com/blogs/posts/\" +\n          this.selectedPost.id +\n          \"/comment/\" +\n          this.selectedComment.id,\n        {\n          method: \"PATCH\",\n          body: JSON.stringify(requestData),\n        }\n      );\n      let responseData = await response.json();\n      this.selectedComment.text = responseData.text;\n      this.showInput = false;\n      this.isBeeingEddited = false;\n      this.selectedComment = \"\";\n    },\n    deleteComment() {\n      apiFetch(\n        \"https://dimitarvuik.pythonanywhere.com/blogs/posts/\" +\n          this.selectedPost.id +\n          \"/comment/\" +\n          this.selectedComment.id,\n        {\n          method: \"DELETE\",\n        }\n      )\n        .then((data) => {\n          console.log(data);\n          // remove the item from the local data\n            (this.showInput = false)\n            this.getPosts();\n          })\n\n        .catch((error) => {\n          // handle error\n          console.log(error);\n        });\n    },\n    async getPosts() {\n      let response = await apiFetch(\"https://dimitarvuik.pythonanywhere.com/blogs/posts/all\");\n      let responseData = await response.json();\n      this.posts = responseData;\n    },\n  },\n  async created() {\n    await this.getPosts();\n    let user = await apiFetch(\"https://dimitarvuik.pythonanywhere.com/blogs/username\");\n    let responseUser = await user.json();\n\n    console.log(user);\n    console.log(responseUser);\n    this.user = responseUser;\n  },\n};\n</script>\n\n<style >\n.cardtext {\n  border-bottom: 1px solid grey;\n}\n.modal-body {\n  background-color: #222427;\n  border-top-left-radius: 0.5rem;\n  border-top-right-radius: 0.5rem;\n  border: 10px, solid, #222427 !important;\n}\n#comment-input {\n  opacity: 30;\n  background-color: #222427;\n  color: rgb(156, 235, 215);\n}\n\n.custom-footer {\n  background-color: #222427 !important;\n  border: none !important;\n}\n#modal-form,\n#modal-edit {\n  background-color: #333533;\n  color: #03dac5;\n}\n#textarea {\n  background-color: #333533;\n  color: #03dac5;\n}\n#home {\n  background-color: rgb(28, 30, 33);\n}\n\n.card-style {\n  background-color: #303338 !important;\n  color: #03dac5 !important;\n}\n.card-style-comment {\n  background-color: #303338 !important;\n  color: rgb(156, 235, 215) !important;\n}\n#my-modal-1,\n#my-modal-deleteComment {\n  color: #03dac5;\n}\n.post {\n  color: #03dac5 !important ;\n  padding: 5rem;\n  margin-top: 0.5rem;\n}\nsearch-btn:hover {\n  color: #03dac5 !important;\n}\nsearch-btn {\n  margin: 0%;\n}\n.buttonstyle {\n  color: rgb(156, 235, 215) !important;\n}\n.post:hover {\n  opacity: 10;\n}\n.comment-button {\n  color: rgb(218, 218, 218) !important;\n}\n.comment-button:hover {\n  color: #03dac5 !important;\n}\n.buttonstyle:hover {\n  color: #03dac5 !important;\n  opacity: 10;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}