{"ast":null,"code":"import { apiFetch } from \"../main.js\";\nexport default {\n  name: \"UserView\",\n  data() {\n    return {\n      posts: [],\n      user: {},\n      currentUser: {},\n      showInput: false,\n      selectedComment: {},\n      selectedPost: {},\n      comment: \"\",\n      commentsShown: false,\n      isBeeingEddited: false\n    };\n  },\n  methods: {\n    async getPosts() {\n      let response = await apiFetch(\"https://dimitarvuik.pythonanywhere.com/blogs/posts/\" + this.$route.params.username);\n      let responseData = await response.json();\n      this.posts = responseData.posts;\n      console.log(responseData);\n    },\n    selectPost(post) {\n      this.selectedPost = post;\n    },\n    selectComment(comm) {\n      if (this.showInput) {\n        this.selectedComment = comm;\n      }\n    },\n    showInputFunction() {\n      this.showInput = !this.showInput;\n      this.selectedComment = \"\";\n    },\n    async createComment() {\n      let requestData = {\n        text: this.comment\n      };\n      await apiFetch(\"https://dimitarvuik.pythonanywhere.com/blogs/posts/\" + this.selectedPost.id + \"/comment\", {\n        method: \"POST\",\n        body: JSON.stringify(requestData)\n      });\n      this.comment = \"\";\n      await this.getPosts();\n    },\n    async editComment() {\n      let requestData = {\n        text: this.selectedComment.text\n      };\n      let response = await apiFetch(\"https://dimitarvuik.pythonanywhere.com/blogs/posts/\" + this.selectedPost.id + \"/comment/\" + this.selectedComment.id, {\n        method: \"PATCH\",\n        body: JSON.stringify(requestData)\n      });\n      let responseData = await response.json();\n      this.selectedComment.text = responseData.text;\n      this.showInput = false;\n      this.isBeeingEddited = false;\n      this.selectedComment = \"\";\n    },\n    deleteComment() {\n      apiFetch(\"https://dimitarvuik.pythonanywhere.com/blogs/posts/\" + this.selectedPost.id + \"/comment/\" + this.selectedComment.id, {\n        method: \"DELETE\"\n      }).then(data => {\n        console.log(data);\n        // remove the item from the local data\n        this.selectedPost.comment_set = this.selectedPost.comment_set.filter(comment => comment.id !== this.selectedComment.id, this.showInput = false);\n      }).catch(error => {\n        // handle error\n        console.log(error);\n      });\n    }\n  },\n  async created() {\n    let response = await apiFetch(`https://dimitarvuik.pythonanywhere.com/blogs/posts/${this.$route.params.username}`);\n    let responseData = await response.json();\n    this.posts = responseData.posts;\n    this.user = responseData.user;\n    const currentUserResponse = await apiFetch(\"https://dimitarvuik.pythonanywhere.com/blogs/username\");\n    this.currentUser = await currentUserResponse.json();\n  }\n};","map":{"version":3,"mappings":"AA2IA;AACA;EACAA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACA;MACA,8BACA,oFACA;MACA;MACA;MACAC;IACA;IAEAC;MACA;IACA;IACAC;MACA;QACA;MACA;IACA;IACAC;MACA;MACA;IACA;IACA;MACA;QACAC;MACA;MACA,eACA,wDACA,uBACA,YACA;QACAC;QACAC;MACA,EACA;MACA;MACA;IACA;IACA;MACA;QAAAF;MAAA;MACA,8BACA,wDACA,uBACA,cACA,yBACA;QACAC;QACAC;MACA,EACA;MACA;MACA;MACA;MACA;MACA;IACA;IACAC;MACAC,SACA,wDACA,uBACA,cACA,yBACA;QACAH;MACA,EACA,CACAI;QACAT;QACA;QACA,qEACAJ,mDACA,uBACA;MACA,GAEAc;QACA;QACAV;MACA;IACA;EACA;EACA;IACA,8BACA,oFACA;IACA;IAEA;IACA;IACA;IACA;EACA;AACA","names":["name","data","posts","user","currentUser","showInput","selectedComment","selectedPost","comment","commentsShown","isBeeingEddited","methods","console","selectPost","selectComment","showInputFunction","text","method","body","deleteComment","apiFetch","then","catch"],"sourceRoot":"src/views","sources":["UserView.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"m-2\">\n      <div class=\"row d-flex justify-content-center\">\n        <div class=\"col-md-6\">\n          <b-card\n            @click=\"selectPost(post)\"\n            class=\"card-style mt-4\"\n            style=\"width: 100%\"\n            v-for=\"post in posts.slice().reverse()\"\n            :key=\"post.id\"\n          >\n            <div class=\"d-flex card-style justify-content-between\">\n              <div>\n                <b-avatar\n                  button\n                  src=\"https://placekitten.com/300/300\"\n                ></b-avatar>\n                {{ user.username }}\n              </div>\n            </div>\n\n            <b-card-body class=\"card-style\">\n              <b-card-title class=\"card-style\"> {{ post.title }}</b-card-title>\n            </b-card-body>\n\n            <b-list-group class=\"card-style\" flush>\n              <b-list-group-item class=\"card-style\">\n                {{ post.text }}</b-list-group-item\n              >\n              <b-list-group-item class=\"card-style\">\n                <button\n                  @click=\"commentsShown = !commentsShown\"\n                  class=\"bg-dark buttonstyle p-2 btn\"\n                >\n                  {{\n                    commentsShown && selectedPost.id === post.id\n                      ? \"Hide\"\n                      : \"Show\"\n                  }}\n                  Comments\n                </button></b-list-group-item\n              >\n              <div v-if=\"selectedPost.id === post.id && commentsShown\">\n                <b-list-group-item\n                  v-for=\"comm in post.comment_set\"\n                  :key=\"comm.id\"\n                  @click=\"selectComment(comm)\"\n                  class=\"card-style-comment d-flex justify-content-between\"\n                >\n                  <div class=\"d-flex d-lg-block flex-column\">\n                    <b-avatar\n                      button\n                      src=\"https://placekitten.com/300/300\"\n                    ></b-avatar>\n                    {{ comm.user.user.username }}\n                  </div>\n                  <div class=\"d-flex align-items-center\">\n                    <p\n                      class=\"m-0\"\n                      v-if=\"!isBeeingEddited && selectedComment.id !== comm.id\"\n                    >\n                      {{ comm.text }}\n                    </p>\n                    <b-form-input\n                      v-if=\"selectedComment.id === comm.id && showInput\"\n                      id=\"comment-input-edit\"\n                      v-model=\"selectedComment.text\"\n                      placeholder=\"write a comment...\"\n                      class=\"bg-dark text-white\"\n                    >\n                    </b-form-input>\n                    <button\n                      class=\"btn -btn-primary bg-dark text-white\"\n                      v-if=\"selectedComment.id === comm.id && showInput\"\n                      @click=\"editComment\"\n                    >\n                      enter\n                    </button>\n                  </div>\n\n                  <div class=\"d-flex align-items-center\">\n                    <button\n                      @click=\"showInputFunction\"\n                      class=\"btn comment-button\"\n                      v-if=\"comm.user.user.id === currentUser.id\"\n                    >\n                      âœŽ\n                    </button>\n                    <button\n                      @click=\"showInput = true\"\n                      class=\"btn comment-button\"\n                      v-if=\"comm.user.user.id === currentUser.id\"\n                      v-b-modal.my-modal-deleteComment\n                    >\n                      x\n                    </button>\n                  </div>\n                </b-list-group-item>\n\n                <b-list-group-item class=\"card-style\">\n                  <div class=\"d-flex\">\n                    <b-form-input\n                      id=\"comment-input\"\n                      v-model=\"comment\"\n                      placeholder=\"write a comment...\"\n                    >\n                    </b-form-input>\n                    <button\n                      @click=\"createComment\"\n                      class=\"btn btn-dark buttonstyle p-2\"\n                    >\n                      enter\n                    </button>\n                  </div>\n                </b-list-group-item>\n              </div>\n            </b-list-group>\n\n            <b-card-body />\n          </b-card>\n          <b-modal\n            id=\"my-modal-deleteComment\"\n            class=\"text-white\"\n            ok-title=\"Delete\"\n            header-class=\"d-none\"\n            footer-class=\"custom-footer\"\n            @ok=\"deleteComment()\"\n            @cancel=\"showInputFunction()\"\n          >\n            Are you sure you want to delete this comment?\n          </b-modal>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { apiFetch } from \"../main.js\";\nexport default {\n  name: \"UserView\",\n  data() {\n    return {\n      posts: [],\n      user: {},\n      currentUser: {},\n      showInput: false,\n      selectedComment: {},\n      selectedPost: {},\n      comment: \"\",\n      commentsShown: false,\n      isBeeingEddited: false,\n    };\n  },\n  methods: {\n    async getPosts() {\n      let response = await apiFetch(\n        \"https://dimitarvuik.pythonanywhere.com/blogs/posts/\" + this.$route.params.username\n      );\n      let responseData = await response.json();\n      this.posts = responseData.posts;\n      console.log(responseData);\n    },\n\n    selectPost(post) {\n      this.selectedPost = post;\n    },\n    selectComment(comm) {\n      if (this.showInput) {\n        this.selectedComment = comm;\n      }\n    },\n    showInputFunction() {\n      this.showInput = !this.showInput;\n      this.selectedComment = \"\";\n    },\n    async createComment() {\n      let requestData = {\n        text: this.comment,\n      };\n      await apiFetch(\n        \"https://dimitarvuik.pythonanywhere.com/blogs/posts/\" +\n          this.selectedPost.id +\n          \"/comment\",\n        {\n          method: \"POST\",\n          body: JSON.stringify(requestData),\n        }\n      );\n      this.comment = \"\";\n      await this.getPosts();\n    },\n    async editComment() {\n      let requestData = { text: this.selectedComment.text };\n      let response = await apiFetch(\n        \"https://dimitarvuik.pythonanywhere.com/blogs/posts/\" +\n          this.selectedPost.id +\n          \"/comment/\" +\n          this.selectedComment.id,\n        {\n          method: \"PATCH\",\n          body: JSON.stringify(requestData),\n        }\n      );\n      let responseData = await response.json();\n      this.selectedComment.text = responseData.text;\n      this.showInput = false;\n      this.isBeeingEddited = false;\n      this.selectedComment = \"\";\n    },\n    deleteComment() {\n      apiFetch(\n        \"https://dimitarvuik.pythonanywhere.com/blogs/posts/\" +\n          this.selectedPost.id +\n          \"/comment/\" +\n          this.selectedComment.id,\n        {\n          method: \"DELETE\",\n        }\n      )\n        .then((data) => {\n          console.log(data);\n          // remove the item from the local data\n          this.selectedPost.comment_set = this.selectedPost.comment_set.filter(\n            (comment) => comment.id !== this.selectedComment.id,\n            (this.showInput = false)\n          );\n        })\n\n        .catch((error) => {\n          // handle error\n          console.log(error);\n        });\n    },\n  },\n  async created() {\n    let response = await apiFetch(\n      `https://dimitarvuik.pythonanywhere.com/blogs/posts/${this.$route.params.username}`\n    );\n    let responseData = await response.json();\n\n    this.posts = responseData.posts;\n    this.user = responseData.user;\n    const currentUserResponse = await apiFetch(\"https://dimitarvuik.pythonanywhere.com/blogs/username\");\n     this.currentUser = await currentUserResponse.json();\n  },\n};\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}